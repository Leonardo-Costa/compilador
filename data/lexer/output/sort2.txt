Line: 1, Lexeme: int, Token: KW_INT
Line: 1, Lexeme: x, Token: ID
Line: 1, Lexeme: [, Token: OPEN_BRA
Line: 1, Lexeme: 10, Token: NUM
Line: 1, Lexeme: ], Token: CLOSE_BRA
Line: 1, Lexeme: ;, Token: SEMICOLON
Line: 3, Lexeme: int, Token: KW_INT
Line: 3, Lexeme: minloc, Token: ID
Line: 3, Lexeme: (, Token: OPEN_PAR
Line: 3, Lexeme: int, Token: KW_INT
Line: 3, Lexeme: a, Token: ID
Line: 3, Lexeme: [, Token: OPEN_BRA
Line: 3, Lexeme: ], Token: CLOSE_BRA
Line: 3, Lexeme: ,, Token: COMMA
Line: 3, Lexeme: int, Token: KW_INT
Line: 3, Lexeme: low, Token: ID
Line: 3, Lexeme: ,, Token: COMMA
Line: 3, Lexeme: int, Token: KW_INT
Line: 3, Lexeme: high, Token: ID
Line: 3, Lexeme: ), Token: CLOSE_PAR
Line: 4, Lexeme: {, Token: OPEN_CUR
Line: 4, Lexeme: int, Token: KW_INT
Line: 4, Lexeme: i, Token: ID
Line: 4, Lexeme: ;, Token: SEMICOLON
Line: 4, Lexeme: int, Token: KW_INT
Line: 4, Lexeme: x, Token: ID
Line: 4, Lexeme: ;, Token: SEMICOLON
Line: 4, Lexeme: int, Token: KW_INT
Line: 4, Lexeme: k, Token: ID
Line: 4, Lexeme: ;, Token: SEMICOLON
Line: 5, Lexeme: k, Token: ID
Line: 5, Lexeme: =, Token: ATTR
Line: 5, Lexeme: low, Token: ID
Line: 5, Lexeme: ;, Token: SEMICOLON
Line: 6, Lexeme: x, Token: ID
Line: 6, Lexeme: =, Token: ATTR
Line: 6, Lexeme: a, Token: ID
Line: 6, Lexeme: [, Token: OPEN_BRA
Line: 6, Lexeme: low, Token: ID
Line: 6, Lexeme: ], Token: CLOSE_BRA
Line: 6, Lexeme: ;, Token: SEMICOLON
Line: 7, Lexeme: i, Token: ID
Line: 7, Lexeme: =, Token: ATTR
Line: 7, Lexeme: low, Token: ID
Line: 7, Lexeme: +, Token: SUM
Line: 7, Lexeme: 1, Token: NUM
Line: 7, Lexeme: ;, Token: SEMICOLON
Line: 8, Lexeme: while, Token: KW_WHILE
Line: 8, Lexeme: (, Token: OPEN_PAR
Line: 8, Lexeme: i, Token: ID
Line: 8, Lexeme: <, Token: LT
Line: 8, Lexeme: high, Token: ID
Line: 8, Lexeme: ), Token: CLOSE_PAR
Line: 9, Lexeme: {, Token: OPEN_CUR
Line: 9, Lexeme: if, Token: KW_IF
Line: 9, Lexeme: (, Token: OPEN_PAR
Line: 9, Lexeme: a, Token: ID
Line: 9, Lexeme: [, Token: OPEN_BRA
Line: 9, Lexeme: i, Token: ID
Line: 9, Lexeme: ], Token: CLOSE_BRA
Line: 9, Lexeme: <, Token: LT
Line: 9, Lexeme: x, Token: ID
Line: 9, Lexeme: ), Token: CLOSE_PAR
Line: 10, Lexeme: {, Token: OPEN_CUR
Line: 10, Lexeme: x, Token: ID
Line: 10, Lexeme: =, Token: ATTR
Line: 10, Lexeme: a, Token: ID
Line: 10, Lexeme: [, Token: OPEN_BRA
Line: 10, Lexeme: i, Token: ID
Line: 10, Lexeme: ], Token: CLOSE_BRA
Line: 10, Lexeme: ;, Token: SEMICOLON
Line: 11, Lexeme: k, Token: ID
Line: 11, Lexeme: =, Token: ATTR
Line: 11, Lexeme: i, Token: ID
Line: 11, Lexeme: ;, Token: SEMICOLON
Line: 11, Lexeme: }, Token: CLOSE_CUR
Line: 12, Lexeme: i, Token: ID
Line: 12, Lexeme: =, Token: ATTR
Line: 12, Lexeme: i, Token: ID
Line: 12, Lexeme: +, Token: SUM
Line: 12, Lexeme: 1, Token: NUM
Line: 12, Lexeme: ;, Token: SEMICOLON
Line: 13, Lexeme: }, Token: CLOSE_CUR
Line: 14, Lexeme: return, Token: KW_RETURN
Line: 14, Lexeme: k, Token: ID
Line: 14, Lexeme: ;, Token: SEMICOLON
Line: 15, Lexeme: }, Token: CLOSE_CUR