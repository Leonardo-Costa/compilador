Line: 1, Lexeme: void, Token: KW_VOID
Line: 1, Lexeme: sort, Token: ID
Line: 1, Lexeme: (, Token: OPEN_PAR
Line: 1, Lexeme: int, Token: KW_INT
Line: 1, Lexeme: a, Token: ID
Line: 1, Lexeme: [, Token: OPEN_BRA
Line: 1, Lexeme: ], Token: CLOSE_BRA
Line: 1, Lexeme: ,, Token: COMMA
Line: 1, Lexeme: int, Token: KW_INT
Line: 1, Lexeme: low, Token: ID
Line: 1, Lexeme: ,, Token: COMMA
Line: 1, Lexeme: int, Token: KW_INT
Line: 1, Lexeme: high, Token: ID
Line: 1, Lexeme: ), Token: CLOSE_PAR
Line: 2, Lexeme: {, Token: OPEN_CUR
Line: 2, Lexeme: int, Token: KW_INT
Line: 2, Lexeme: i, Token: ID
Line: 2, Lexeme: ;, Token: SEMICOLON
Line: 2, Lexeme: int, Token: KW_INT
Line: 2, Lexeme: k, Token: ID
Line: 2, Lexeme: ;, Token: SEMICOLON
Line: 3, Lexeme: i, Token: ID
Line: 3, Lexeme: =, Token: ATTR
Line: 3, Lexeme: low, Token: ID
Line: 3, Lexeme: ;, Token: SEMICOLON
Line: 4, Lexeme: while, Token: KW_WHILE
Line: 4, Lexeme: (, Token: OPEN_PAR
Line: 4, Lexeme: i, Token: ID
Line: 4, Lexeme: <, Token: LT
Line: 4, Lexeme: high, Token: ID
Line: 4, Lexeme: -, Token: SUB
Line: 4, Lexeme: 1, Token: NUM
Line: 4, Lexeme: ), Token: CLOSE_PAR
Line: 5, Lexeme: {, Token: OPEN_CUR
Line: 5, Lexeme: int, Token: KW_INT
Line: 5, Lexeme: t, Token: ID
Line: 5, Lexeme: ;, Token: SEMICOLON
Line: 6, Lexeme: k, Token: ID
Line: 6, Lexeme: =, Token: ATTR
Line: 6, Lexeme: minloc, Token: ID
Line: 6, Lexeme: (, Token: OPEN_PAR
Line: 6, Lexeme: a, Token: ID
Line: 6, Lexeme: ,, Token: COMMA
Line: 6, Lexeme: i, Token: ID
Line: 6, Lexeme: ,, Token: COMMA
Line: 6, Lexeme: high, Token: ID
Line: 6, Lexeme: ), Token: CLOSE_PAR
Line: 6, Lexeme: ;, Token: SEMICOLON
Line: 7, Lexeme: t, Token: ID
Line: 7, Lexeme: =, Token: ATTR
Line: 7, Lexeme: a, Token: ID
Line: 7, Lexeme: [, Token: OPEN_BRA
Line: 7, Lexeme: k, Token: ID
Line: 7, Lexeme: ], Token: CLOSE_BRA
Line: 7, Lexeme: ;, Token: SEMICOLON
Line: 8, Lexeme: a, Token: ID
Line: 8, Lexeme: [, Token: OPEN_BRA
Line: 8, Lexeme: k, Token: ID
Line: 8, Lexeme: ], Token: CLOSE_BRA
Line: 8, Lexeme: =, Token: ATTR
Line: 8, Lexeme: a, Token: ID
Line: 8, Lexeme: [, Token: OPEN_BRA
Line: 8, Lexeme: i, Token: ID
Line: 8, Lexeme: ], Token: CLOSE_BRA
Line: 8, Lexeme: ;, Token: SEMICOLON
Line: 9, Lexeme: a, Token: ID
Line: 9, Lexeme: [, Token: OPEN_BRA
Line: 9, Lexeme: i, Token: ID
Line: 9, Lexeme: ], Token: CLOSE_BRA
Line: 9, Lexeme: =, Token: ATTR
Line: 9, Lexeme: t, Token: ID
Line: 9, Lexeme: ;, Token: SEMICOLON
Line: 10, Lexeme: i, Token: ID
Line: 10, Lexeme: =, Token: ATTR
Line: 10, Lexeme: i, Token: ID
Line: 10, Lexeme: +, Token: SUM
Line: 10, Lexeme: 1, Token: NUM
Line: 10, Lexeme: ;, Token: SEMICOLON
Line: 11, Lexeme: }, Token: CLOSE_CUR
Line: 12, Lexeme: }, Token: CLOSE_CUR